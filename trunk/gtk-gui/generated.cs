// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.42
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace Stetic {
    
    
    internal class Gui {
        
        private static bool initialized;
        
        public static void Build(object obj, System.Type type) {
            Stetic.Gui.Build(obj, type.FullName);
        }
        
        public static void Build(object obj, string id) {
            if ((Stetic.Gui.initialized == false)) {
                Stetic.Gui.Initialize();
            }
            System.Collections.Hashtable bindings = new System.Collections.Hashtable();
            if ((id == "MensagemWeb.Windows.QueueWindow")) {
                Gtk.Window cobj = ((Gtk.Window)(obj));
                // Widget MensagemWeb.Windows.QueueWindow
                cobj.Title = "Fila de mensagens";
                Gtk.UIManager w1 = new Gtk.UIManager();
                Gtk.ActionGroup w2 = new Gtk.ActionGroup("Default");
                Gtk.Action w3 = new Gtk.Action("cancelAction", "Interromper", "Deixa de enviar as mensagens selecionadas", "gtk-stop");
                w3.ShortLabel = "Interromper";
                w3.IsImportant = true;
                w3.Sensitive = false;
                bindings["cancelAction"] = w3;
                w2.Add(w3, null);
                Gtk.Action w4 = new Gtk.Action("resendAction", "Reenviar", "Envia novamente as mensagens selecionadas", "gtk-go-forward");
                w4.ShortLabel = "Reenviar";
                w4.IsImportant = true;
                w4.Sensitive = false;
                bindings["resendAction"] = w4;
                w2.Add(w4, null);
                Gtk.Action w5 = new Gtk.Action("clearAction", "Limpar", "Retira da lista todos os itens enviados ou com erro", "gtk-clear");
                w5.ShortLabel = "Limpar";
                w5.IsImportant = true;
                bindings["clearAction"] = w5;
                w2.Add(w5, null);
                w1.InsertActionGroup(w2, 0);
                cobj.AddAccelGroup(w1.AccelGroup);
                cobj.WindowPosition = ((Gtk.WindowPosition)(4));
                cobj.BorderWidth = ((uint)(12));
                cobj.Events = ((Gdk.EventMask)(0));
                cobj.Name = "MensagemWeb.Windows.QueueWindow";
                // Container child MensagemWeb.Windows.QueueWindow.Gtk.Container+ContainerChild
                Gtk.VBox w6 = new Gtk.VBox();
                w6.Spacing = 12;
                w6.Events = ((Gdk.EventMask)(0));
                w6.Name = "vbox2";
                // Container child vbox2.Gtk.Box+BoxChild
                Gtk.HBox w7 = new Gtk.HBox();
                w7.Spacing = 12;
                w7.Events = ((Gdk.EventMask)(0));
                w7.Name = "progressbox";
                // Container child progressbox.Gtk.Box+BoxChild
                Gtk.Image w8 = new Gtk.Image();
                w8.Pixbuf = Gtk.IconTheme.Default.LoadIcon("gtk-network", 48, 0);
                w8.Xalign = 0F;
                w8.Yalign = 0F;
                w8.Events = ((Gdk.EventMask)(0));
                w8.Name = "image2";
                bindings["image2"] = w8;
                w7.Add(w8);
                Gtk.Box.BoxChild w9 = ((Gtk.Box.BoxChild)(w7[w8]));
                w9.Position = 0;
                w9.Expand = false;
                w9.Fill = false;
                // Container child progressbox.Gtk.Box+BoxChild
                Gtk.VBox w10 = new Gtk.VBox();
                w10.Spacing = 6;
                w10.Events = ((Gdk.EventMask)(0));
                w10.Name = "vbox4";
                // Container child vbox4.Gtk.Box+BoxChild
                Gtk.Label w11 = new Gtk.Label();
                w11.LabelProp = "<span size=\"large\" weight=\"bold\">Nenhuma mensagem a ser enviada</span>";
                w11.UseMarkup = true;
                w11.Xalign = 0F;
                w11.Yalign = 0F;
                w11.Events = ((Gdk.EventMask)(0));
                w11.Name = "titleLabel";
                bindings["titleLabel"] = w11;
                w10.Add(w11);
                Gtk.Box.BoxChild w12 = ((Gtk.Box.BoxChild)(w10[w11]));
                w12.Position = 0;
                w12.Expand = false;
                // Container child vbox4.Gtk.Box+BoxChild
                Gtk.Label w13 = new Gtk.Label();
                w13.LabelProp = "Atualmente não há nenhuma mensagem a ser enviada. \nVá para a janela principal do MensagemWeb para colocar\numa nova mensagem na fila para ser enviada.";
                w13.Xalign = 0F;
                w13.Yalign = 0F;
                w13.Events = ((Gdk.EventMask)(0));
                w13.Name = "subLabel";
                bindings["subLabel"] = w13;
                w10.Add(w13);
                Gtk.Box.BoxChild w14 = ((Gtk.Box.BoxChild)(w10[w13]));
                w14.Position = 1;
                w14.Expand = false;
                // Container child vbox4.Gtk.Box+BoxChild
                Gtk.ProgressBar w15 = new Gtk.ProgressBar();
                w15.Text = "Foram enviadas 4 de 6 mensagens...";
                w15.Fraction = 1;
                w15.Events = ((Gdk.EventMask)(0));
                w15.Name = "progressbar";
                bindings["progressbar"] = w15;
                w10.Add(w15);
                Gtk.Box.BoxChild w16 = ((Gtk.Box.BoxChild)(w10[w15]));
                w16.Position = 2;
                w16.Expand = false;
                bindings["vbox4"] = w10;
                w7.Add(w10);
                Gtk.Box.BoxChild w17 = ((Gtk.Box.BoxChild)(w7[w10]));
                w17.Position = 1;
                bindings["progressbox"] = w7;
                w6.Add(w7);
                Gtk.Box.BoxChild w18 = ((Gtk.Box.BoxChild)(w6[w7]));
                w18.Position = 0;
                w18.Expand = false;
                w18.Fill = false;
                // Container child vbox2.Gtk.Box+BoxChild
                Gtk.HBox w19 = new Gtk.HBox();
                w19.Spacing = 12;
                w19.Events = ((Gdk.EventMask)(0));
                w19.Name = "errorbox";
                // Container child errorbox.Gtk.Box+BoxChild
                Gtk.Image w20 = new Gtk.Image();
                w20.Pixbuf = Gtk.IconTheme.Default.LoadIcon("gtk-dialog-error", 48, 0);
                w20.Xalign = 0F;
                w20.Yalign = 0F;
                w20.Events = ((Gdk.EventMask)(0));
                w20.Name = "image1";
                bindings["image1"] = w20;
                w19.Add(w20);
                Gtk.Box.BoxChild w21 = ((Gtk.Box.BoxChild)(w19[w20]));
                w21.Position = 0;
                w21.Expand = false;
                w21.Fill = false;
                // Container child errorbox.Gtk.Box+BoxChild
                Gtk.VBox w22 = new Gtk.VBox();
                w22.Spacing = 6;
                w22.Events = ((Gdk.EventMask)(0));
                w22.Name = "vbox1";
                // Container child vbox1.Gtk.Box+BoxChild
                Gtk.Label w23 = new Gtk.Label();
                w23.LabelProp = "<span size=\"large\" weight=\"bold\">Houve falhas no envio</span>";
                w23.UseMarkup = true;
                w23.Xalign = 0F;
                w23.Yalign = 0F;
                w23.Events = ((Gdk.EventMask)(0));
                w23.Name = "label1";
                bindings["label1"] = w23;
                w22.Add(w23);
                Gtk.Box.BoxChild w24 = ((Gtk.Box.BoxChild)(w22[w23]));
                w24.Position = 0;
                w24.Expand = false;
                w24.Fill = false;
                // Container child vbox1.Gtk.Box+BoxChild
                Gtk.Label w25 = new Gtk.Label();
                w25.LabelProp = "Uma ou mais mensagens não puderam ser\nenviadas e estão marcadas abaixo.";
                w25.Xalign = 0F;
                w25.Yalign = 0F;
                w25.Events = ((Gdk.EventMask)(0));
                w25.Name = "label2";
                bindings["label2"] = w25;
                w22.Add(w25);
                Gtk.Box.BoxChild w26 = ((Gtk.Box.BoxChild)(w22[w25]));
                w26.Position = 1;
                w26.Expand = false;
                w26.Fill = false;
                // Container child vbox1.Gtk.Box+BoxChild
                Gtk.HButtonBox w27 = new Gtk.HButtonBox();
                w27.LayoutStyle = ((Gtk.ButtonBoxStyle)(3));
                w27.Events = ((Gdk.EventMask)(0));
                w27.Name = "hbuttonbox2";
                // Container child hbuttonbox2.Gtk.ButtonBox+ButtonBoxChild
                Gtk.Button w28 = new Gtk.Button();
                w28.CanFocus = true;
                w28.Events = ((Gdk.EventMask)(0));
                w28.Name = "errorbutton";
                // Container child errorbutton.Gtk.Container+ContainerChild
                Gtk.Alignment w29 = new Gtk.Alignment(0.5F, 0.5F, 0F, 0F);
                w29.Events = ((Gdk.EventMask)(0));
                w29.Name = "GtkAlignment";
                // Container child GtkAlignment.Gtk.Container+ContainerChild
                Gtk.HBox w30 = new Gtk.HBox();
                w30.Spacing = 2;
                w30.Events = ((Gdk.EventMask)(0));
                w30.Name = "GtkHBox";
                // Container child GtkHBox.Gtk.Container+ContainerChild
                Gtk.Image w31 = new Gtk.Image();
                w31.Pixbuf = Gtk.IconTheme.Default.LoadIcon("gtk-refresh", 16, 0);
                w31.Events = ((Gdk.EventMask)(0));
                w31.Name = "image1";
                bindings["image1"] = w31;
                w30.Add(w31);
                // Container child GtkHBox.Gtk.Container+ContainerChild
                Gtk.Label w33 = new Gtk.Label();
                w33.LabelProp = "Tentar reenviar as que falharam";
                w33.Events = ((Gdk.EventMask)(0));
                w33.Name = "GtkLabel";
                bindings["GtkLabel"] = w33;
                w30.Add(w33);
                bindings["GtkHBox"] = w30;
                w29.Add(w30);
                bindings["GtkAlignment"] = w29;
                w28.Add(w29);
                bindings["errorbutton"] = w28;
                w27.Add(w28);
                Gtk.ButtonBox.ButtonBoxChild w37 = ((Gtk.ButtonBox.ButtonBoxChild)(w27[w28]));
                w37.Expand = false;
                w37.Fill = false;
                bindings["hbuttonbox2"] = w27;
                w22.Add(w27);
                Gtk.Box.BoxChild w38 = ((Gtk.Box.BoxChild)(w22[w27]));
                w38.Position = 2;
                w38.Expand = false;
                w38.Fill = false;
                bindings["vbox1"] = w22;
                w19.Add(w22);
                Gtk.Box.BoxChild w39 = ((Gtk.Box.BoxChild)(w19[w22]));
                w39.Position = 1;
                bindings["errorbox"] = w19;
                w6.Add(w19);
                Gtk.Box.BoxChild w40 = ((Gtk.Box.BoxChild)(w6[w19]));
                w40.Position = 1;
                w40.Expand = false;
                w40.Fill = false;
                // Container child vbox2.Gtk.Box+BoxChild
                Gtk.ScrolledWindow w41 = new Gtk.ScrolledWindow();
                w41.VscrollbarPolicy = ((Gtk.PolicyType)(2));
                w41.HscrollbarPolicy = ((Gtk.PolicyType)(2));
                w41.ShadowType = ((Gtk.ShadowType)(1));
                w41.CanFocus = true;
                w41.Events = ((Gdk.EventMask)(0));
                w41.Name = "scrolledwindow1";
                // Container child scrolledwindow1.Gtk.Container+ContainerChild
                Gtk.Viewport w42 = new Gtk.Viewport();
                w42.ShadowType = ((Gtk.ShadowType)(0));
                w42.Events = ((Gdk.EventMask)(0));
                w42.Name = "GtkViewport";
                // Container child GtkViewport.Gtk.Container+ContainerChild
                Gtk.VBox w43 = new Gtk.VBox();
                w43.Events = ((Gdk.EventMask)(0));
                w43.Name = "vbox3";
                // Container child vbox3.Gtk.Box+BoxChild
                w1.AddUiFromString("<ui><toolbar name='toolbar1'><toolitem action='resendAction'/><separator/><toolitem action='cancelAction'/><toolitem action='clearAction'/></toolbar></ui>");
                Gtk.Toolbar w44 = ((Gtk.Toolbar)(w1.GetWidget("/toolbar1")));
                w44.ShowArrow = false;
                w44.Tooltips = true;
                w44.ToolbarStyle = ((Gtk.ToolbarStyle)(3));
                w44.IconSize = ((Gtk.IconSize)(3));
                w44.Events = ((Gdk.EventMask)(0));
                w44.Name = "toolbar1";
                bindings["toolbar1"] = w44;
                w43.Add(w44);
                Gtk.Box.BoxChild w45 = ((Gtk.Box.BoxChild)(w43[w44]));
                w45.Position = 0;
                w45.Expand = false;
                w45.Fill = false;
                // Container child vbox3.Gtk.Box+BoxChild
                Gtk.HBox w46 = new Gtk.HBox();
                w46.Events = ((Gdk.EventMask)(0));
                w46.Name = "nodepanel";
                bindings["nodepanel"] = w46;
                w43.Add(w46);
                Gtk.Box.BoxChild w47 = ((Gtk.Box.BoxChild)(w43[w46]));
                w47.Position = 1;
                bindings["vbox3"] = w43;
                w42.Add(w43);
                bindings["GtkViewport"] = w42;
                w41.Add(w42);
                bindings["scrolledwindow1"] = w41;
                w6.Add(w41);
                Gtk.Box.BoxChild w50 = ((Gtk.Box.BoxChild)(w6[w41]));
                w50.Position = 2;
                // Container child vbox2.Gtk.Box+BoxChild
                Gtk.HBox w51 = new Gtk.HBox();
                w51.Spacing = 20;
                w51.Events = ((Gdk.EventMask)(0));
                w51.Name = "hbox1";
                // Container child hbox1.Gtk.Box+BoxChild
                Gtk.CheckButton w52 = new Gtk.CheckButton();
                w52.Label = "Fechar esta janela após as mensagens serem enviadas";
                w52.Active = true;
                w52.DrawIndicator = true;
                w52.CanFocus = true;
                w52.Events = ((Gdk.EventMask)(0));
                w52.Name = "autoclosecheckbutton";
                bindings["autoclosecheckbutton"] = w52;
                w51.Add(w52);
                Gtk.Box.BoxChild w53 = ((Gtk.Box.BoxChild)(w51[w52]));
                w53.Position = 0;
                w53.Expand = false;
                // Container child hbox1.Gtk.Box+BoxChild
                Gtk.HButtonBox w54 = new Gtk.HButtonBox();
                w54.LayoutStyle = ((Gtk.ButtonBoxStyle)(4));
                w54.Spacing = 6;
                w54.Events = ((Gdk.EventMask)(0));
                w54.Name = "hbuttonbox1";
                // Container child hbuttonbox1.Gtk.ButtonBox+ButtonBoxChild
                Gtk.Button w55 = new Gtk.Button();
                w55.UseStock = true;
                w55.UseUnderline = true;
                w55.CanFocus = true;
                w55.Events = ((Gdk.EventMask)(0));
                w55.Name = "closebutton";
                w55.Label = "gtk-close";
                bindings["closebutton"] = w55;
                w54.Add(w55);
                Gtk.ButtonBox.ButtonBoxChild w56 = ((Gtk.ButtonBox.ButtonBoxChild)(w54[w55]));
                w56.Expand = false;
                w56.Fill = false;
                bindings["hbuttonbox1"] = w54;
                w51.Add(w54);
                Gtk.Box.BoxChild w57 = ((Gtk.Box.BoxChild)(w51[w54]));
                w57.Position = 1;
                bindings["hbox1"] = w51;
                w6.Add(w51);
                Gtk.Box.BoxChild w58 = ((Gtk.Box.BoxChild)(w6[w51]));
                w58.Position = 3;
                w58.Expand = false;
                w58.Fill = false;
                bindings["vbox2"] = w6;
                cobj.Add(w6);
                cobj.DefaultWidth = 634;
                cobj.DefaultHeight = 470;
                bindings["MensagemWeb.Windows.QueueWindow"] = cobj;
                w8.Show();
                w11.Show();
                w13.Show();
                w15.Show();
                w10.Show();
                w7.Show();
                w20.Show();
                w23.Show();
                w25.Show();
                w31.Show();
                w33.Show();
                w30.Show();
                w29.Show();
                w28.Show();
                w27.Show();
                w22.Show();
                w44.Show();
                w46.Show();
                w43.Show();
                w42.Show();
                w41.Show();
                w52.Show();
                w55.Show();
                w54.Show();
                w51.Show();
                w6.Show();
                w3.Activated += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "CancelClicked")));
                w4.Activated += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "ResendClicked")));
                w5.Activated += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "ClearClicked")));
                w28.Clicked += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "ResendWithError")));
                w55.Clicked += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "CloseWindow")));
            }
            System.Reflection.FieldInfo[] fields = obj.GetType().GetFields(((System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic) | System.Reflection.BindingFlags.Instance));
            for (int n = 0; (n < fields.Length); n = (n + 1)) {
                System.Reflection.FieldInfo field = fields[n];
                object widget = bindings[field.Name];
                if (((widget != null) && field.FieldType.IsInstanceOfType(widget))) {
                    field.SetValue(obj, widget);
                }
            }
        }
        
        private static void Initialize() {
            Gtk.IconFactory w1 = new Gtk.IconFactory();
            Gtk.IconSet w2 = new Gtk.IconSet();
            Gtk.IconSource w3 = new Gtk.IconSource();
            w3.Pixbuf = Gdk.Pixbuf.LoadFromResource("icone64.png");
            w2.AddSource(w3);
            Gtk.IconSource w4 = new Gtk.IconSource();
            w4.Pixbuf = Gdk.Pixbuf.LoadFromResource("icone48.png");
            w2.AddSource(w4);
            Gtk.IconSource w5 = new Gtk.IconSource();
            w5.Pixbuf = Gdk.Pixbuf.LoadFromResource("icone16.png");
            w2.AddSource(w5);
            w1.Add("MensagemWeb", w2);
            w1.AddDefault();
        }
    }
    
    internal class ActionGroups {
        
        public static Gtk.ActionGroup GetActionGroup(System.Type type) {
            return Stetic.ActionGroups.GetActionGroup(type.FullName);
        }
        
        public static Gtk.ActionGroup GetActionGroup(string name) {
            return null;
        }
    }
}
